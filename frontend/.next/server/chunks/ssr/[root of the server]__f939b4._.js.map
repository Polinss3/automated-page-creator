{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pablo/automated-page-creation/frontend/src/app/posts/%5Bslug%5D/page.tsx"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport matter from 'gray-matter';\r\nimport { Post } from '@/../../types';\r\nimport Header from '@/components/Header/Header';\r\nimport PostDetails from '@/components/PostDetails/PostDetails';\r\nimport { notFound } from 'next/navigation';\r\n\r\ninterface PostPageProps {\r\n  params: {\r\n    slug: string;\r\n  };\r\n}\r\n\r\nexport default async function PostPage({ params }: PostPageProps) {\r\n  const { slug } = params;\r\n  const filePath = path.join(process.cwd(), 'src', 'posts', `${slug}.md`);\r\n\r\n  if (!fs.existsSync(filePath)) {\r\n    notFound();\r\n  }\r\n\r\n  const fileContents = fs.readFileSync(filePath, 'utf-8');\r\n  const { data, content } = matter(fileContents);\r\n\r\n  const post: Post = {\r\n    title: data.title,\r\n    description: data.description,\r\n    keywords: data.keywords,\r\n    content,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        introduccion={post.description}\r\n        caracteristicas={post.content.split('\\n').filter(line => line.startsWith('- '))}\r\n        globalFotos={[]} // Añade URLs de imágenes si es necesario\r\n        marcaPadre={post.title}\r\n      />\r\n      <PostDetails content={post.content} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  const postsDirectory = path.join(process.cwd(), 'src', 'posts');\r\n  const filenames = fs.readdirSync(postsDirectory);\r\n\r\n  return filenames.map(filename => ({\r\n    slug: filename.replace(/\\.md$/, ''),\r\n  }));\r\n}\r\n\r\nexport async function generateMetadata({ params }: PostPageProps) {\r\n  const { slug } = params;\r\n  const filePath = path.join(process.cwd(), 'src', 'posts', `${slug}.md`);\r\n\r\n  if (!fs.existsSync(filePath)) {\r\n    return {\r\n      title: 'Post no encontrado',\r\n      description: 'El post que estás buscando no existe.',\r\n    };\r\n  }\r\n\r\n  const fileContents = fs.readFileSync(filePath, 'utf-8');\r\n  const { data } = matter(fileContents);\r\n\r\n  return {\r\n    title: data.title,\r\n    description: data.description,\r\n    keywords: data.keywords,\r\n    robots: 'index, follow',\r\n  };\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;AAQe,eAAe,SAAS,EAAE,MAAM,EAAiB;IAC9D,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,CAAC;IAEtE,IAAI,CAAC,2FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,MAAM,eAAe,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;IAEjC,MAAM,OAAa;QACjB,OAAO,KAAK,KAAK;QACjB,aAAa,KAAK,WAAW;QAC7B,UAAU,KAAK,QAAQ;QACvB;IACF;IAEA,qBACE;;0BACE,8OAAC,6IAAA,CAAA,UAAM;gBACL,cAAc,KAAK,WAAW;gBAC9B,iBAAiB,KAAK,OAAO,CAAC,KAAK,CAAC,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,UAAU,CAAC;gBACzE,aAAa,EAAE;gBACf,YAAY,KAAK,KAAK;;;;;;0BAExB,8OAAC,uJAAA,CAAA,UAAW;gBAAC,SAAS,KAAK,OAAO;;;;;;;;AAGxC;AAEO,eAAe;IACpB,MAAM,iBAAiB,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO;IACvD,MAAM,YAAY,2FAAA,CAAA,UAAE,CAAC,WAAW,CAAC;IAEjC,OAAO,UAAU,GAAG,CAAC,CAAA,WAAY,CAAC;YAChC,MAAM,SAAS,OAAO,CAAC,SAAS;QAClC,CAAC;AACH;AAEO,eAAe,iBAAiB,EAAE,MAAM,EAAiB;IAC9D,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,CAAC;IAEtE,IAAI,CAAC,2FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,OAAO;YACL,OAAO;YACP,aAAa;QACf;IACF;IAEA,MAAM,eAAe,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,UAAM,AAAD,EAAE;IAExB,OAAO;QACL,OAAO,KAAK,KAAK;QACjB,aAAa,KAAK,WAAW;QAC7B,UAAU,KAAK,QAAQ;QACvB,QAAQ;IACV;AACF"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}