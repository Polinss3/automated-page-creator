{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/ProductDetails/ProductDetails.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n});\n"],"names":[],"mappings":"AAAA;AACA"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pablo/automated-page-creation/frontend/src/app/components/ProductDetails/ProductDetails.tsx"],"sourcesContent":["// frontend/components/ProductDetails.tsx\r\n\r\nimport { FC } from 'react';\r\nimport { Product } from '@/../../types';\r\nimport styles from './ProductDetails.module.css';\r\nimport Image from 'next/image';\r\n\r\ninterface ProductDetailsProps {\r\n  product: Product;\r\n}\r\n\r\nconst ProductDetails: FC<ProductDetailsProps> = ({ product }) => {\r\n  return (\r\n    <div className={styles.productContainer}>\r\n      <h1 className={styles.title}>{product.name}</h1>\r\n      <Image\r\n        className={styles.mainImage}\r\n        src={product.main_image}\r\n        alt={`${product.name} imagen principal`}\r\n        width={800}\r\n        height={600}\r\n      />\r\n      <h2 className={styles.subtitle}>{product.subtitle}</h2>\r\n      <p className={styles.description}>{product.description}</p>\r\n      <Image\r\n        className={styles.secondaryImage}\r\n        src={product.secondary_image}\r\n        alt={`${product.name} imagen secundaria`}\r\n        width={800}\r\n        height={600}\r\n      />\r\n      <ul className={styles.features}>\r\n        {product.features.map((feature: any, index: any) => (\r\n          <li key={index} className={styles.featureItem}>\r\n            {feature}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetails;\r\n"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAIzC;AACA;;;;AAMA,MAAM,iBAA0C,CAAC,EAAE,OAAO,EAAE;IAC1D,qBACE,8OAAC;QAAI,WAAW,2KAAA,CAAA,UAAM,CAAC,gBAAgB;;0BACrC,8OAAC;gBAAG,WAAW,2KAAA,CAAA,UAAM,CAAC,KAAK;0BAAG,QAAQ,IAAI;;;;;;0BAC1C,8OAAC,6HAAA,CAAA,UAAK;gBACJ,WAAW,2KAAA,CAAA,UAAM,CAAC,SAAS;gBAC3B,KAAK,QAAQ,UAAU;gBACvB,KAAK,GAAG,QAAQ,IAAI,CAAC,iBAAiB,CAAC;gBACvC,OAAO;gBACP,QAAQ;;;;;;0BAEV,8OAAC;gBAAG,WAAW,2KAAA,CAAA,UAAM,CAAC,QAAQ;0BAAG,QAAQ,QAAQ;;;;;;0BACjD,8OAAC;gBAAE,WAAW,2KAAA,CAAA,UAAM,CAAC,WAAW;0BAAG,QAAQ,WAAW;;;;;;0BACtD,8OAAC,6HAAA,CAAA,UAAK;gBACJ,WAAW,2KAAA,CAAA,UAAM,CAAC,cAAc;gBAChC,KAAK,QAAQ,eAAe;gBAC5B,KAAK,GAAG,QAAQ,IAAI,CAAC,kBAAkB,CAAC;gBACxC,OAAO;gBACP,QAAQ;;;;;;0BAEV,8OAAC;gBAAG,WAAW,2KAAA,CAAA,UAAM,CAAC,QAAQ;0BAC3B,QAAQ,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAc,sBACnC,8OAAC;wBAAe,WAAW,2KAAA,CAAA,UAAM,CAAC,WAAW;kCAC1C;uBADM;;;;;;;;;;;;;;;;AAOnB;uCAEe"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pablo/automated-page-creation/frontend/src/app/products/%5Bslug%5D/page.tsx"],"sourcesContent":["// frontend/src/app/products/[slug]/page.tsx\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { Product } from '@/../../types';\r\nimport ProductDetails from '@/components/ProductDetails/ProductDetails';\r\nimport Header from '@/components/Header/Header'; // Importación del componente Header\r\nimport { notFound } from 'next/navigation';\r\n\r\ninterface ProductPageProps {\r\n  params: {\r\n    slug: string;\r\n  };\r\n}\r\n\r\nexport default async function ProductPage({ params }: ProductPageProps) {\r\n  const { slug } = params;\r\n  const filePath = path.join(process.cwd(), 'data', 'products.json'); // Asegúrate de que esta ruta es correcta según tu estructura de directorios\r\n\r\n  // Verificar si el archivo existe\r\n  if (!fs.existsSync(filePath)) {\r\n    notFound();\r\n  }\r\n\r\n  // Leer y parsear el archivo JSON\r\n  const jsonData = fs.readFileSync(filePath, 'utf-8');\r\n  const products: Product[] = JSON.parse(jsonData);\r\n\r\n  // Encontrar el producto correspondiente al slug\r\n  const product = products.find((p) => p.slug === slug);\r\n\r\n  // Si no se encuentra el producto, mostrar página 404\r\n  if (!product) {\r\n    notFound();\r\n  }\r\n\r\n  // Integrar el componente Header con los datos del producto\r\n  return (\r\n    <>\r\n      <Header\r\n        introduccion={product.description}\r\n        caracteristicas={product.features}\r\n        globalFotos={[product.main_image]} // Usar la imagen principal del producto\r\n        marcaPadre={product.name} // Usar el nombre del producto como título\r\n        // Puedes añadir más props si es necesario\r\n      />\r\n      <ProductDetails product={product} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function generateStaticParams() {\r\n  const filePath = path.join(process.cwd(), 'data', 'products.json'); // Asegúrate de que esta ruta es correcta\r\n  const jsonData = fs.readFileSync(filePath, 'utf-8');\r\n  const products: Product[] = JSON.parse(jsonData);\r\n\r\n  return products.map((product) => ({\r\n    slug: product.slug,\r\n  }));\r\n}\r\n\r\nexport async function generateMetadata(props: ProductPageProps) {\r\n  const { params } = props; // Desestructurar params dentro de la función\r\n  const filePath = path.join(process.cwd(), 'data', 'products.json'); // Asegúrate de que esta ruta es correcta\r\n  const jsonData = fs.readFileSync(filePath, 'utf-8');\r\n  const products: Product[] = JSON.parse(jsonData);\r\n\r\n  const product = products.find((p) => p.slug === params.slug);\r\n\r\n  if (!product) {\r\n    return {\r\n      title: 'Producto no encontrado',\r\n      description: 'El producto que estás buscando no existe.',\r\n    };\r\n  }\r\n\r\n  return {\r\n    title: product.name,\r\n    description: product.description,\r\n    keywords: product.features.join(', '),\r\n    robots: 'index, follow',\r\n  };\r\n}\r\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;;;AAE5C;AACA;AAEA;AACA,mPAAiD,oCAAoC;AACrF;AAAA;;;;;;;AAQe,eAAe,YAAY,EAAE,MAAM,EAAoB;IACpE,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,kBAAkB,4EAA4E;IAEhJ,iCAAiC;IACjC,IAAI,CAAC,2FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,WAAW;QAC5B,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,iCAAiC;IACjC,MAAM,WAAW,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC3C,MAAM,WAAsB,KAAK,KAAK,CAAC;IAEvC,gDAAgD;IAChD,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAEhD,qDAAqD;IACrD,IAAI,CAAC,SAAS;QACZ,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,2DAA2D;IAC3D,qBACE;;0BACE,8OAAC,6IAAA,CAAA,UAAM;gBACL,cAAc,QAAQ,WAAW;gBACjC,iBAAiB,QAAQ,QAAQ;gBACjC,aAAa;oBAAC,QAAQ,UAAU;iBAAC;gBACjC,YAAY,QAAQ,IAAI;;;;;;0BAG1B,8OAAC,6JAAA,CAAA,UAAc;gBAAC,SAAS;;;;;;;;AAG/B;AAEO,eAAe;IACpB,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,kBAAkB,yCAAyC;IAC7G,MAAM,WAAW,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC3C,MAAM,WAAsB,KAAK,KAAK,CAAC;IAEvC,OAAO,SAAS,GAAG,CAAC,CAAC,UAAY,CAAC;YAChC,MAAM,QAAQ,IAAI;QACpB,CAAC;AACH;AAEO,eAAe,iBAAiB,KAAuB;IAC5D,MAAM,EAAE,MAAM,EAAE,GAAG,OAAO,6CAA6C;IACvE,MAAM,WAAW,6FAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,kBAAkB,yCAAyC;IAC7G,MAAM,WAAW,2FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,UAAU;IAC3C,MAAM,WAAsB,KAAK,KAAK,CAAC;IAEvC,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,OAAO,IAAI;IAE3D,IAAI,CAAC,SAAS;QACZ,OAAO;YACL,OAAO;YACP,aAAa;QACf;IACF;IAEA,OAAO;QACL,OAAO,QAAQ,IAAI;QACnB,aAAa,QAAQ,WAAW;QAChC,UAAU,QAAQ,QAAQ,CAAC,IAAI,CAAC;QAChC,QAAQ;IACV;AACF"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}